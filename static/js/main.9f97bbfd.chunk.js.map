{"version":3,"sources":["components/Search/search.js","components/Table/table.js","routes/api.js","components/Container/container.js","components/Header/header.js","App.js","index.js"],"names":["Search","props","className","onSubmit","handleFormSubmit","value","name","onChange","handleInputChange","type","placeholder","Table","scope","data-field","data-sortable","onClick","sortBy","state","filteredEmployees","map","employee","first","last","fullName","dob","formatDate","date","src","picture","thumbnail","alt","href","phone","email","login","uuid","API","getRandomUser","axios","get","Container","search","employees","sortDirections","initialSortDirections","event","target","setState","filterEmployees","toLowerCase","trim","preventDefault","key","primary","secondary","sortedEmployees","reverse","sort","a","b","localeCompare","input","filter","concat","includes","location","city","age","Date","push","getMonth","slice","getDate","getFullYear","join","then","res","data","results","catch","err","console","log","this","Component","Header","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9f97bbfd.chunk.js","sourcesContent":["import React from \"react\";\n\n\nconst Search = (props) => {\n  // Setting the component's initial state\n\n  return (\n    <nav className=\"navbar navbar-dark bg-light justify-content-center\">\n      <form className=\"form-inline m-8\" onSubmit={props.handleFormSubmit}>\n        <input\n          className=\"form-control\"\n          value={props.value}\n          name=\"search\"\n          onChange={props.handleInputChange}\n          type=\"search\"\n          placeholder=\"Search for an employee\"\n        />\n      </form>\n    </nav>\n  );\n};\n\nexport default Search;\n\n","import React from \"react\";\r\n\r\n\r\nconst Table = (props) => {\r\n  return (\r\n    <table className=\"table table-striped table-sortable text-center\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">Image</th>\r\n          <th scope=\"col\" data-field=\"name\" data-sortable=\"true\">\r\n            <span onClick={() => props.sortBy(\"name\", \"last\", \"first\")}>\r\n              Name\r\n            </span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"email\")}>Phone</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"location\")}>Email</span>\r\n          </th>\r\n          <th scope=\"col\">\r\n            <span onClick={() => props.sortBy(\"dob\", \"age\")}>Date of Birth</span>\r\n          </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {props.state.filteredEmployees.map((employee) => {\r\n          const { first, last } = employee.name;\r\n          const fullName = `${first} ${last}`;\r\n\r\n          // Format date\r\n          const dob = props.formatDate(employee.dob.date);\r\n\r\n          return (\r\n            <tr key={employee.login.uuid}>\r\n              <td>\r\n                <img src={employee.picture.thumbnail} alt={fullName} />\r\n              </td>\r\n              <td className=\"align-middle\">{fullName}</td>\r\n              <td className=\"align-middle\">\r\n              <a href={`tel:+1${employee.phone}`}>{employee.phone}</a></td>\r\n              <td className=\"align-middle email\">\r\n                <a href={`mailto:${employee.email}`}>{employee.email}</a>\r\n              </td>\r\n              <td className=\"align-middle\">{dob}</td>\r\n            </tr>\r\n          );\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default Table;","import axios from \"axios\";\n\nconst API = {\n  getRandomUser: function() {\n    return axios.get(\"https://randomuser.me/api/?results=50&nat=au\");\n  },\n};\n\nexport default API;","import React, { Component } from \"react\";\nimport Search from \"../Search/search\";\nimport Table from \"../Table/table\";\nimport API from \"../../routes/api\";\n\nclass Container extends Component {\n  state = {\n    search: \"\",\n    employees: [],\n    filteredEmployees: [],\n    sortDirections: this.initialSortDirections,\n  };\n\n  get initialSortDirections() {\n    return {\n      name: \"\",\n      phone: \"\",\n      email: \"\",\n      dob: \"\",\n    };\n  }\n\n  // When this component mounts, load random users as employees from https://randomuser.me/\n  componentDidMount() {\n    API.getRandomUser()\n      .then((res) =>\n        this.setState({\n          employees: res.data.results,\n          filteredEmployees: res.data.results,\n        })\n      )\n      .catch((err) => console.log(err));\n  }\n\n  // Update search state to filter by employee name\n  handleInputChange = (event) => {\n    const value = event.target.value;\n    this.setState({ search: value });\n    this.filterEmployees(value.toLowerCase().trim());\n  };\n\n  handleFormSubmit = (event) => {\n    event.preventDefault();\n  };\n\n  // Sort with the key of specified object.\n  // If key has children, sort by primary child and optionally a secondary child. i.e. sort by last name, then first.\n  sortBy = (key, primary = 0, secondary = 0) => {\n    let sortedEmployees = this.state.filteredEmployees;\n    if (this.state.sortDirections[key]) {\n      this.setState({\n        filteredEmployees: sortedEmployees.reverse(),\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: this.state.sortDirections[key] === \"asc\" ? \"desc\" : \"asc\",\n        },\n      });\n    } else {\n      sortedEmployees = this.state.filteredEmployees.sort((a, b) => {\n        a = a[key];\n        b = b[key];\n\n        // If secondary comparison given and primary comparison is equal\n        // Example: Sorting by last name, if last names are equal, then sort that instance by first name instead.\n        if (primary) {\n          if (secondary && a[primary] === b[primary]) {\n            return a[secondary].localeCompare(b[secondary]);\n          }\n          return a[primary].localeCompare(b[primary]);\n        } else {\n          return a.localeCompare(b);\n        }\n      });\n\n      this.setState({\n        filteredEmployees: sortedEmployees,\n        sortDirections: {\n          ...this.initialSortDirections,\n          [key]: \"asc\",\n        },\n      });\n    }\n  };\n\n  filterEmployees = (input) => {\n    if (input) {\n      this.setState({\n        filteredEmployees: this.state.employees.filter((employee) => {\n          return (\n            employee.name.first\n              .toLowerCase()\n              .concat(\" \", employee.name.last.toLowerCase())\n              .includes(input) ||\n            employee.email.includes(input) ||\n            employee.location.city.includes(input) ||\n            employee.dob.age.includes(input)\n          );\n        }),\n      });\n    } else {\n      this.setState({ filteredEmployees: this.state.employees });\n    }\n  };\n\n  formatDate = (date) => {\n    date = new Date(date);\n    let dob = [];\n    dob.push((\"0\" + (date.getMonth() + 1)).slice(-2));\n    dob.push((\"0\" + date.getDate()).slice(-2));\n    dob.push(date.getFullYear());\n\n    // Join formatted date\n    return dob.join(\"-\");\n  };\n\n  render() {\n    return (\n      <>\n        <Search\n          value={this.state.search}\n          handleInputChange={this.handleInputChange}\n          handleFormSubmit={this.handleFormSubmit}\n        />\n        <div className=\"container mt-4\">\n          <Table\n            state={this.state}\n            sortBy={this.sortBy}\n            filterEmployees={this.filterEmployees}\n            formatDate={this.formatDate}\n          />\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Container;\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <h1 className=\"text-center\">Employee Directory</h1>\r\n      <p className=\"text-center\">\r\n        Click on column headers to filter by heading or use the search box to narrow\r\n        your results.\r\n      </p>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;","import React from \"react\";\n// import { BrowserRouter as Router, Route } from \"react-router-dom\";\n// import NavBar from \"./components/NavBar/nav\";\nimport Container from \"./components/Container/container\";\nimport Header from \"./components/Header/header\";\n\n;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <NavBar /> */}\n      <Header />\n      <Container />     \n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n\n"],"sourceRoot":""}